name: CD - Deploy Backend

on:
  pull_request:
    branches:
      - master
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      # Database for production
      postgres:
        image: postgres:16.1
        env:
          POSTGRES_USER: ahmed
          POSTGRES_PASSWORD: ahmedroot
          POSTGRES_DB: medicinemanager
        ports:
          - 5332:5432  #host:container
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # Database for Integration tests
      postgresTest:
        image: postgres:16.1
        env:
          POSTGRES_USER: ahmed
          POSTGRES_PASSWORD: ahmedroot
          POSTGRES_DB: medicinemanagertest
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Send Slack Message Deployment started
        run: >
          curl -X POST -H 'Content-type: application/json' --data '
          {"text":"Deployment Started! :progress_bar: :cool-doge:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Logged in to docker slack
        run: >
          curl -X POST -H 'Content-type: application/json' --data '
          {"text":"Logging to docker hub success! :meow_party:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Set build number
        id: build-number   # so other stpes can call it
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT  #Make a build number based on this format of date
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' --data '
          {"text":"Set build number and building with Maven! :maven:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Send Slack Message Pushed to docker hub
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":docker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to Docker Repository"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../Dockerrun.aws.json
          sed -i -E 's_(ahmedi999/medicinesmanager-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat ../Dockerrun.aws.json
      # Following steps to be included after starting the EC2 instance | Disabled until doing so
      #      - name: Send Slack Message
      #        run: >
      #          curl -X POST -H 'Content-type: application/json'
      #          --data '{"text":":aws: Starting deployment to Elastic Beanstalk"}'
      #          ${{ secrets.SLACK_WEBHOOK_URL }}
      #      - name: Deploy to Elastic Beanstalk
      #        uses: einaregilsson/beanstalk-deploy@v21
      #        with:
      #          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #          application_name: ${{ secrets.EB_APPLICATION_NAME }}
      #          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
      #          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
      #          version_description: ${{ github.SHA }}
      #          region: ${{ secrets.EB_REGION }}
      #          deployment_package: Dockerrun.aws.json
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":githubloading: Committing to Project Repository"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull origin Fullstack-Dev --merge
          git add ../Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push origin HEAD:Fullstack-Dev
      - name: Send Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Deployment and commit completed :github-check-mark: :party_blob: :amongustwerkhalloween:"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Job Status ${{ job.status }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack Message on Failure
        if: failure()
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Deployment Failed :warning: :sad-doge:  :elmofire:"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}